%fieldset
  %h1
    Roles for
    = @object.name
  - if @object.roles.size == 0
    %p No roles found for user.
  - else
    %table
      %tr
        %th Role
      - @object.roles.each do |role|
        %tr{:class => cycle('even', 'odd')}
          %td
            = link_to(role.title.chars.capitalize, role, {:title => role.description})
.clear
.float_left
  %fieldset
    %legend Assign roles to the user
    - if @available_roles.size == 0
      %p.small (This user has all available roles.)
    - else
      - form_tag :action => 'process_role' do
        = hidden_field_tag :id, @object.id
        %div
          = label :user, :role
          = select_tag('role_id', options_from_collection_for_select(@available_roles, :id, :title))
        %div= submit_tag('Add role')
.float_right
  %fieldset
    %legend Remove roles from the user
    - # collect removable roles
    - removable_roles = @object.roles
    - message = "(This user has no assigned roles.)"
    - if @object == current_user
      - admin_role = Role.find_by_title('administrator')
      - result = removable_roles.reject! {|role| role.title.eql?('administrator')}
      - unless result.nil?
        - removable_roles = result
        - message = "(This user has no assigned roles which can be removed;<br/> you cannot remove the administrator role from yourself.)"
    - if removable_roles.size == 0
      %p.small= message
    - else
      - options = removable_roles.collect {|role| '<option id="' + role.id.to_s + '">' + role.title.chars.capitalize + '</option>'}.join
      - form_tag :action => 'process_role' do
        = hidden_field_tag :id, @object.id
        %div
          = label :user, :role
          = select_tag('role_id', options)
        %div
          = submit_tag('Remove role')
.clear
