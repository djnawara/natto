- content_for :head, javascript_include_tag('tiny_mce/embed.js', :plugin => 'natto')
- content_for :javascript, javascript_include_tag('treemenu', :plugin => 'natto')
#blog
  #blog_posts
    - posts = get_recent_posts(@object)
    - posts.each do |post| # render recent posts for the page
      .blog_post
        .post_date
          - create  = ChangeLog.find(:first, :conditions => {:object_class => post.class.name.tableize.singularize, :object_id => post.id, :action => ChangeLog::CREATE})
          - publish = ChangeLog.find(:first, :conditions => {:object_class => post.class.name.tableize.singularize, :object_id => post.id, :action => ChangeLog::PUBLISH})
          - if publish.nil?
            = format_date(create.performed_at, :long) unless create.nil?
          - else
            = format_date(publish.performed_at, :long)
        %h2= post.title
        .post_description= post.description unless post.description.blank?
        .post_content= truncate_html(post.content)
        .post_more= link_to("Read more", post)
        %p= render :partial => "posts/share"
        .post_comments
          - if post.comments.size == 0
            %p
              = link_to(posts_icon, post)
              = link_to("Be the first to make a comment", post)
          - else
            %p
              = link_to(posts_icon("View and post comments (#{post.comments.size})"), post)
              = link_to("View and post comments (#{post.comments.size})", post)
            %p
              = link_to(image_tag("link.png", :plugin => 'natto'), post_path(post))
              = link_to("Permalink", post_path(post))
          - if logged_in? && current_user.is_administrator?
            %p.post_controls
              = link_to(monitor_icon('Statistics'), instance_logs_path('post', post))
              = link_to edit_icon('Edit'), edit_post_path(post)
              = link_to destroy_icon('Destroy'), post, :confirm => "Are you sure you want to permanently delete this post?", :method => :delete
    #pagination_nav= will_paginate posts
  #blog_sidebar
    #sidebar_content= @object.content
    = render :partial => 'posts/sidebar'
.clear
